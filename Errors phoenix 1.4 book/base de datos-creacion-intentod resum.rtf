{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica-Bold;
\f3\fnil\fcharset0 Georgia;}
{\colortbl;\red255\green255\blue255;\red202\green202\blue202;\red23\green23\blue23;\red194\green126\blue101;
\red183\green111\blue179;\red70\green137\blue204;\red212\green214\blue154;\red0\green0\blue0;\red236\green242\blue247;
\red4\green9\blue16;\red191\green203\blue217;\red12\green18\blue31;}
{\*\expandedcolortbl;;\cssrgb\c83137\c83137\c83137;\cssrgb\c11765\c11765\c11765;\cssrgb\c80784\c56863\c47059;
\cssrgb\c77255\c52549\c75294;\cssrgb\c33725\c61176\c83922;\cssrgb\c86275\c86275\c66667;\cssrgb\c0\c0\c0;\cssrgb\c94118\c96078\c97647;
\cssrgb\c1176\c3529\c7451;\cssrgb\c79216\c83529\c87843;\cssrgb\c5098\c9412\c16078;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww14200\viewh16380\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Phoenix,,, crea un archivo repo,, el cual se va a poner alias desde el contexto a utilizar,,, para llamar funciones como Repo.get() que lo que le pasemos b\'e1sicamente se conecta con la base de datos y crea la query que necesitemos seg\'fan la funci\'f3n que le pasemos,, y nos devuelve los datos que cumplan con aquellas condiciones que tenga la query creada,,,y a partir de ah\'ed tratamos los datos como nos parezca (sea imprimirlos o x)\
\
\
\
Dado,, el archivo repo,,, en nuestro struct viejo,,, usamos Echo.Schema,, para crear un nuevo \'93struct\'94 ,,, que sera a la vez el struct,, y el objeto que nos permite importar cosas de la base de datos,,, es decir,, cada Field creado all\'ed en el schema,, sera tanto Field en la base de datos y un Field del struct para la app,, para ser tratado como cualquier otro. \
 \
 \
Desde ahi,, creado el schema,, hacemos el mix.echo.gen.migration create_obj\'85 que sera nuestro archivo en el cual crearemos la tabla de la base de datos,, con la funci\'f3n change,,, que viene vacia,, en nuestro caso,, para el dato usuario \
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
 schema \cf4 "users"\cf2  \cf5 do\cf2     \
	field \cf6 :name\cf2 , \cf6 :string\cf2 \cb1 \
\cb3     field \cf6 :username\cf2 , \cf6 :string\cf2 \cb1 \
\cb3     timestamps()\cb1 \
\cb3   \cf5 end\cf2 \cb1 \
 Nuestra funci\'f3n change quedar\'eda de la siguiente manera,, tener en cuenta que password no se vera en la app por lo tanto el shcema no lo tiene. \
 \cf5 \cb3 def\cf2  \cf7 change\cf2  \cf5 do\cf2 \cb1 \
\cb3     create_table(\cf6 :users\cf2 ) \cf5 do\cf2 \cb1 \
\cb3       add \cf6 :name\cf2 , \cf6 :string\cf2 \cb1 \
\cb3       add \cf6 :username\cf2 , \cf6 :string\cf2 , \cf6 null:\cf2  \cf6 false\cf2 \cb1 \
\cb3       add \cf6 :password_hash\cf2 , \cf6 :string\cf2 \cb1 \
\
\cb3       timestamps()\cb1 \
\cb3     \cf5 end\cf2 \cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf8 A partir de aqu\'ed,,, creada esta funci\'f3n, lo que hacemos es mix.ecto.migrate que nos creara en nuestra base de datos la tabla que lleva la funci\'f3n del archivo creado anteriormente. \
\
Para tratar los datos o traerlos desde la base de datos,, en el contexto de los datos,,, ponemos funciones como get_user, donde llamamos a Repo.get(User, id) ,, recordar que en la tabla de la base de datos,, los datos autom\'e1ticamente se crean con 1 id. Entonces, el flow sigue siendo el mismo que antes,,\
Router,, pide ciertas cosas al controlador,,, el controlador se comunica con el contexto,, el contexto pide las cosas a la base de datos,, y la base de datos las retorna y vuelven retorn\'e1ndoselas los datos para atras. \
De la misma manera crear\'edamos funciones para insertar nuevos datos,, actualizar y dem\'e1s,, creamos funciones en el controlador o acciones,,, que llamaran a una funci\'f3n en el contexto de esos datos que se vayan a tratar,, y estos los traen o hacen lo que tengan que hacer en la base de datos,,, ordenados desde el contexto,.. y luego los retornas o haces un retorno que tengas que hacer hacia el controlador y el controlador al router. \
 \
\
\
Para la tabla creada en la funci\'f3n change,,\
\pard\pardeftab720\li79\fi-80\sa132\partightenfactor0

\f2\b\fs26\fsmilli13200 \cf9 \cb10 \outl0\strokewidth0 \strokec9 Options\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f1\b0\fs32 \cf11 \cb12 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 :primary_key
\f3 \cb10 \'a0- when\'a0
\f1 \cb12 true
\f3 \cb10 , marks this field as the primary key. If multiple fields are marked, a composite primary key will be created.\cb1 \
\ls1\ilvl0
\f1 \cb12 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 :default
\f3 \cb10 \'a0- the column's default value. It can be a string, number, empty list, list of strings, list of numbers, or a fragment generated by\'a0{\field{\*\fldinst{HYPERLINK "https://hexdocs.pm/ecto_sql/Ecto.Migration.html#fragment/1"}}{\fldrslt 
\f1 \cf9 \cb12 \strokec9 fragment/1}}.\cb1 \
\ls1\ilvl0
\f1 \cb12 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 :null
\f3 \cb10 \'a0- when\'a0
\f1 \cb12 false
\f3 \cb10 , the column does not allow null values.\cb1 \
\ls1\ilvl0
\f1 \cb12 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 :size
\f3 \cb10 \'a0- the size of the type (for example, the number of characters). The default is no size, except for\'a0
\f1 \cb12 :string
\f3 \cb10 , which defaults to\'a0
\f1 \cb12 255
\f3 \cb10 .\cb1 \
\ls1\ilvl0
\f1 \cb12 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 :precision
\f3 \cb10 \'a0- the precision for a numeric type. Required when\'a0
\f1 \cb12 :scale
\f3 \cb10 \'a0is specified.\cb1 \
\ls1\ilvl0
\f1 \cb12 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 :scale
\f3 \cb10 \'a0- the scale of a numeric type. Defaults to\'a0
\f1 \cb12 0
\f3 \cb10 .\cb1 \
\ls1\ilvl0
\f1 \cb12 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 :after
\f3 \cb10 \'a0- positions field after the specified one. Only supported on MySQL, it is ignored by other databases.\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf8 \outl0\strokewidth0 \
 \
 \cf2 \
}